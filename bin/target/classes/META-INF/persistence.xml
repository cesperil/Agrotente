<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<persistence version="2.0"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                                 http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd
                                 http://java.sun.com/xml/ns/persistence/orm 
                                 http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
	xmlns:orm="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/persistence">

	<persistence-unit name="agile"
		transaction-type="JTA">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<jta-data-source>java:jboss/datasources/agile</jta-data-source>
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

		<!-- <mapping-file>META-INF/Taskorm.xml</mapping-file>
		<mapping-file>META-INF/JBPMorm.xml</mapping-file>-->
	<!-- <mapping-file>META-INF/Executor-orm.xml</mapping-file> 
		<mapping-file>META-INF/Servicesorm.xml</mapping-file>
		<mapping-file>META-INF/TaskAuditorm.xml</mapping-file>-->

<!-- <class>  es.gpex.asistente.vo.ExpedienteVO</class> -->


		<properties>
			<property name="hibernate.cache.provider_class" value="org.hibernate.cache.SingletonEhCacheProvider" />
			<property name="hibernate.cache.use_second_level_cache" value="true" />
			<property name="hibernate.cache.use_query_cache" value="true" />
			<property name="hibernate.max_fetch_depth" value="3" />
			<property name="hibernate.hbm2ddl.auto" value="validate" />
				<!-- <property name="hibernate.hbm2ddl.auto"
					validate: validate the schema, makes no changes to the database.
					update: update the schema.
					create: creates the schema, destroying previous data.
					create-drop: drop the schema at the end of the session.
			 	-->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.JBossTransactionManagerLookup" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.SQLServer2008Dialect" />
			<property name="hibernate.id.new_generator_mappings" value="false" />
			
			<!-- rsanchez_doc 20151119 Solventa la carga de objetos lazy, probado y funcionando para @ManyToOne(fetch = FetchType.LAZY -->
			<property name="hibernate.enable_lazy_load_no_trans" value="true" />
			
		</properties>

	</persistence-unit>

</persistence>
